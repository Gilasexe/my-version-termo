# === Imports ===
import random
import time
from palavras_termo import dicionario_palavras # Importa a lista diretamente

# === Constantes do Jogo ===
TENTATIVAS_MAXIMAS = 6
TAMANHO_PALAVRA = 5

# === Prepara√ß√£o do Jogo ===
# Escolhe uma palavra aleat√≥ria da sua lista e a converte para mai√∫sculas
palavra_secreta = random.choice(dicionario_palavras).upper()
tentativas_restantes = TENTATIVAS_MAXIMAS
vitorioso = False

# === Mensagem de Boas-vindas ===
print("--- BEM-VINDO AO JOGO TERMO (DEMO) ---")
print(f"Adivinhe a palavra de {TAMANHO_PALAVRA} letras em {TENTATIVAS_MAXIMAS} tentativas.")
print("üü¢ Letra certa no lugar certo.")
print("üü† Letra certa no lugar errado.")
print("‚ùå Letra que n√£o existe na palavra.")
print("-----------------------------------------")
time.sleep(1)

# === Loop Principal do Jogo ===
while tentativas_restantes > 0:
    print(f"\nVoc√™ tem {tentativas_restantes} tentativa(s) restante(s).")
    
    # --- Valida√ß√£o da Entrada do Usu√°rio ---
    try:
        tentativa = input("Digite sua tentativa: ").upper()

        # Valida√ß√£o 1: Tamanho da palavra
        if len(tentativa) != TAMANHO_PALAVRA:
            print(f"Erro: A palavra deve ter exatamente {TAMANHO_PALAVRA} letras. Tente novamente.")
            continue # Pula para o in√≠cio do loop sem gastar uma tentativa

        # Valida√ß√£o 2: Palavra existe no dicion√°rio
        if tentativa not in dicionario_palavras:
            print(f"'{tentativa}' n√£o √© uma palavra v√°lida. Tente novamente.")
            continue # Pula para o in√≠cio do loop sem gastar uma tentativa

    except Exception as e:
        print(f"Ocorreu um erro inesperado: {e}")
        continue
    
    # Se a entrada for v√°lida, o jogo continua e uma tentativa √© gasta
    tentativas_restantes -= 1

    # --- L√≥gica de Verifica√ß√£o das Letras (Alternativa Simples) ---
    feedback_final = ""

    for i in range(TAMANHO_PALAVRA):
        letra_da_tentativa = tentativa[i]
        
        # 1. √â verde? (Posi√ß√£o e letra corretas)
        if letra_da_tentativa == palavra_secreta[i]:
            feedback_final += f"üü¢ {letra_da_tentativa} "
        
        # 2. √â amarela? (Letra existe, mas no lugar errado)
        elif letra_da_tentativa in palavra_secreta:
            # Condi√ß√£o para evitar repeti√ß√£o de amarelos
            total_na_secreta = palavra_secreta.count(letra_da_tentativa)
            ja_marcadas_verdes = 0
            ja_marcadas_amarelas = 0

            # Conta quantas vezes a letra j√° foi marcada como verde
            for j in range(TAMANHO_PALAVRA):
                if tentativa[j] == letra_da_tentativa and palavra_secreta[j] == letra_da_tentativa:
                    ja_marcadas_verdes += 1
            
            # Conta quantas vezes a letra j√° foi marcada como amarela (at√© a posi√ß√£o atual)
            for j in range(i):
                 if tentativa[j] == letra_da_tentativa and palavra_secreta[j] != letra_da_tentativa:
                     ja_marcadas_amarelas += 1
            
            if (ja_marcadas_verdes + ja_marcadas_amarelas) < total_na_secreta:
                feedback_final += f"üü† {letra_da_tentativa} "
            else:
                feedback_final += f"‚ùå {letra_da_tentativa} " # J√° usamos todas, ent√£o esta √© cinza
        
        # 3. √â cinza? (Letra n√£o existe na palavra)
        else:
            feedback_final += f"‚ùå {letra_da_tentativa} "
            
    # Mostra o resultado da rodada para o usu√°rio
    print(feedback_final)

    # --- Verifica√ß√£o de Vit√≥ria ---
    if tentativa == palavra_secreta:
        print("\n-----------------------------------------")
        print("üéâ PARAB√âNS! VOC√ä ACERTOU A PALAVRA! üéâ")
        print("-----------------------------------------")
        vitorioso = True
        break # Encerra o loop do jogo

# === Fim de Jogo ===
if not vitorioso:
    print("\n-----------------------------------------")
    print("GAME OVER! Suas tentativas acabaram.")
    print(f"A palavra secreta era: {palavra_secreta}")
    print("-----------------------------------------")

# Pausa antes de fechar o programa
time.sleep(5)